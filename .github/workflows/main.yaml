name: Build and deploy to staging

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

concurrency:
  group: "pages"
  cancel-in-progress: false

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: npm

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key:
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{
            hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          FEEDBACK_FORM_URL: ${{ vars.FEEDBACK_FORM_URL }}

      - name: Install playwright dependencies
        run: npx playwright install --with-deps

      - name: Run playwright
        run: npm run test:e2e

      - name: Upload playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          path: out/

      - name: Deploy to GitHub Pages
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/deploy-pages@v4

      - name: Checkout staging repo
        uses: actions/checkout@v4
        if: ${{ vars.STAGING_REPO && github.event_name != 'pull_request' }}
        with:
          repository: ${{ vars.STAGING_REPO }}
          token: ${{ secrets.GH_PAT }}
          path: staging

      - name: Update staging repo
        if: ${{ vars.STAGING_REPO && github.event_name != 'pull_request' }}
        run: .github/scripts/update-staging.sh
        env:
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

      - name: Push staging changes
        uses: ad-m/github-push-action@master
        if: ${{ vars.STAGING_REPO && github.event_name != 'pull_request' }}
        with:
          github_token: ${{ secrets.GH_PAT }}
          directory: staging
          repository: ${{ vars.STAGING_REPO }}
          force: true

      - name: Wait for 60 seconds to deployment
        if: ${{ vars.STAGING_REPO && github.event_name != 'pull_request' }}
        run: sleep 60

      - name: Run playwright for staging repository
        if: ${{ vars.STAGING_REPO && github.event_name != 'pull_request' }}
        run: npm run test:e2e
        env:
          STAGING_REPO: ${{ vars.STAGING_REPO }}
